---------------------------------------------------------
 ---  DDL for Sequence SEQUENCE_AUTHOR
 ---------------------------------------------------------

  CREATE SEQUENCE  "SEQUENCE_AUTHOR"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 ---------------------------------------------------------
 ---  DDL for Sequence SEQUENCE_BOOK
 ---------------------------------------------------------

   CREATE SEQUENCE  "SEQUENCE_BOOK"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 ---------------------------------------------------------
 ---  DDL for Sequence SEQUENCE_CONTENT
 ---------------------------------------------------------

    CREATE SEQUENCE  "SEQUENCE_CONTENT"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 ---------------------------------------------------------
 ---  DDL for Sequence SEQUENCE_CUSTOMER
 ---------------------------------------------------------

   CREATE SEQUENCE  "SEQUENCE_CUSTOMER"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 ---------------------------------------------------------
 ---  DDL for Sequence SEQUENCE_ITEMS
 ---------------------------------------------------------

  CREATE SEQUENCE  "SEQUENCE_ITEMS"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 ---------------------------------------------------------
 ---  DDL for Sequence SEQUENCE_ORDERS
 ---------------------------------------------------------

  CREATE SEQUENCE  "SEQUENCE_ORDERS"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 ---------------------------------------------------------
 ---  DDL for Table AUTHOR
 ---------------------------------------------------------

  CREATE TABLE "AUTHOR"
   (	"ID_AUTHOR" NUMBER, 
	"SURNAME" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CONTENR_ORDER
--------------------------------------------------------

  CREATE TABLE "CONTENR_ORDER"
   (	"ID_CONTENT" NUMBER, 
	"ID_ORDER" NUMBER, 
	"ID_BOOK" NUMBER, 
	"AMOUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "CUSTOMER"
   (	"ID_CUSTOMER" NUMBER, 
	"LOGIN" VARCHAR2(50 BYTE), 
	"PASSWORD" VARCHAR2(20 BYTE), 
	"E_MAIL" VARCHAR2(50 BYTE), 
	"PHOME_NUBMER" VARCHAR2(12 BYTE), 
	"ROLE" NUMBER DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "CUSTOMER"."ROLE" IS 'if  is system - 0, admin -10, user -1';
--------------------------------------------------------
--  DDL for Table ITEM
--------------------------------------------------------

  CREATE TABLE "ITEM"
   (	"ID_ITEM" NUMBER, 
	"NAME" VARCHAR2(50 BYTE), 
	"PARENT_ID" NUMBER, 
	"DESCRIPTION" VARCHAR2(150 BYTE), 
	"TYPE" NUMBER, 
	"ID_PROPERTIES" NUMBER DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "ITEM"."PARENT_ID" IS 'if is rubric-ID_section, if is book - ID_rubric';
   COMMENT ON COLUMN "ITEM"."TYPE" IS '0- if it is book,1-rubric,2-section';
--------------------------------------------------------
--  DDL for Table ORDERS
--------------------------------------------------------

  CREATE TABLE "ORDERS"
   (	"ID_ORDER" NUMBER, 
	"ID_CUSTOMER" NUMBER, 
	"DATA" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROPERTIES
--------------------------------------------------------

  CREATE TABLE "PROPERTIES"
   (	"ID_BOOK" NUMBER, 
	"PAGES" NUMBER, 
	"PRICE" FLOAT(126), 
	"AMOUNT" NUMBER, 
	"ID_AUTHOR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into AUTHOR
SET DEFINE OFF;
REM INSERTING into CONTENR_ORDER
SET DEFINE OFF;
REM INSERTING into CUSTOMER
SET DEFINE OFF;
REM INSERTING into ITEM
SET DEFINE OFF;
REM INSERTING into ORDERS
SET DEFINE OFF;
REM INSERTING into PROPERTIES
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index CONTENR_ORDER_PK1
--------------------------------------------------------
    CREATE UNIQUE INDEX "CONTENR_ORDER_PK1" ON "CONTENR_ORDER" ("ID_CONTENT", "ID_BOOK") 
  
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
   
 
    TABLESPACE "USERS" ;

--------------------------------------------------------
--  DDL for Index ORDERS_UK_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORDERS_UK_ID" ON "ORDERS" ("ID_ORDER") 
  
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ID_ITEM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ID_ITEM_PK" ON "ITEM" ("ID_ITEM")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ID_CUSTOMER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ID_CUSTOMER_PK" ON "CUSTOMER" ("ID_CUSTOMER")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CONTENR_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONTENR_ORDER_PK" ON "CONTENR_ORDER" ("ID_CONTENT", "ID_BOOK", "ID_ORDER") 
  
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORDERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORDERS_PK" ON "ORDERS" ("ID_ORDER", "ID_CUSTOMER") 
  
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  
TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AUTHOR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "AUTHOR_PK" ON "AUTHOR" ("ID_AUTHOR")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ID_BOOK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ID_BOOK_PK" ON "PROPERTIES" ("ID_BOOK")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

--------------------------------------------------------
--  Constraints for Table AUTHOR
--------------------------------------------------------

  ALTER TABLE "AUTHOR" ADD CONSTRAINT "AUTHOR_PK" PRIMARY KEY ("ID_AUTHOR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "AUTHOR" MODIFY ("ID_AUTHOR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "CUSTOMER" ADD CONSTRAINT "ID_CUSTOMER" PRIMARY KEY ("ID_CUSTOMER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "CUSTOMER" MODIFY ("ID_CUSTOMER" NOT NULL ENABLE);
  ALTER TABLE "CUSTOMER" MODIFY ("ROLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORDERS
--------------------------------------------------------

  ALTER TABLE "ORDERS" MODIFY ("ID_ORDER" NOT NULL ENABLE);
  
  ALTER TABLE "ORDERS" MODIFY ("ID_CUSTOMER" NOT NULL ENABLE);
  
  ALTER TABLE "ORDERS" ADD CONSTRAINT "ORDERS_UK_ID" UNIQUE ("ID_ORDER")
  
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ORDERS" ADD CONSTRAINT "ORDERS_PK" PRIMARY KEY ("ID_ORDER", "ID_CUSTOMER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROPERTIES
--------------------------------------------------------

  ALTER TABLE "PROPERTIES" ADD CONSTRAINT "PROPERTIES_PK" PRIMARY KEY ("ID_BOOK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PROPERTIES" MODIFY ("ID_BOOK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ITEM
--------------------------------------------------------

  ALTER TABLE "ITEM" ADD CONSTRAINT "ITEM_PK" PRIMARY KEY ("ID_ITEM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ITEM" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTENR_ORDER
--------------------------------------------------------

  ALTER TABLE "CONTENR_ORDER" MODIFY ("ID_CONTENT" NOT NULL ENABLE);
 
  ALTER TABLE "CONTENR_ORDER" MODIFY ("ID_ORDER" NOT NULL ENABLE);
  
  ALTER TABLE "CONTENR_ORDER" ADD CONSTRAINT "CONTENR_ORDER_PK" PRIMARY KEY ("ID_CONTENT", "ID_BOOK")
  
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ITEM
--------------------------------------------------------

  ALTER TABLE "ITEM" ADD CONSTRAINT "ITEM_FK1" FOREIGN KEY ("ID_PROPERTIES")
	  REFERENCES "PROPERTIES" ("ID_BOOK") ENABLE;
  ALTER TABLE "ITEM" ADD CONSTRAINT "PARENT_FK" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "ITEM" ("ID_ITEM") ON DELETE CASCADE ENABLE;


--------------------------------------------------------
--  Ref Constraints for Table CONTENR_ORDER
--------------------------------------------------------

  ALTER TABLE "CONTENR_ORDER" ADD CONSTRAINT "CONTENR_ORDER_FK2" FOREIGN KEY ("ID_BOOK")
	  
  REFERENCES "ITEM" ("ID_ITEM") ON DELETE CASCADE ENABLE;
  
  ALTER TABLE "CONTENR_ORDER" ADD CONSTRAINT "CONTENR_ORDER_ORDER_FK" FOREIGN KEY ("ID_ORDER")
	  
  REFERENCES "ORDERS" ("ID_ORDER") ON DELETE CASCADE ENABLE;



--------------------------------------------------------
--  Ref Constraints for Table ORDERS
--------------------------------------------------------

  ALTER TABLE "ORDERS" ADD CONSTRAINT "ORDERS_CUSTOMER_FK" FOREIGN KEY ("ID_CUSTOMER")
	  
  REFERENCES "CUSTOMER" ("ID_CUSTOMER") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROPERTIES
--------------------------------------------------------

  ALTER TABLE "PROPERTIES" ADD CONSTRAINT "PROPERTIES_FK1" FOREIGN KEY ("ID_AUTHOR")
	  REFERENCES "AUTHOR" ("ID_AUTHOR") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_NEW_AUTHOR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_NEW_AUTHOR"
BEFORE INSERT ON AUTHOR
FOR EACH ROW

BEGIN
SELECT SEQUENCE_AUTHOR.NEXTVAL INTO :NEW.ID_AUTHOR FROM dual;
END;
/
ALTER TRIGGER "TR_NEW_AUTHOR" ENABLE;

--------------------------------------------------------
--  DDL for Trigger TR_NEW_CON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_NEW_CON" 

  BEFORE INSERT ON CONTENR_ORDER
  
FOR EACH ROW

  

BEGIN

  SELECT SEQUENCE_CONTENT.NEXTVAL INTO :NEW.ID_CONTENT FROM dual;
  
END;
  
/
  
ALTER TRIGGER "TR_NEW_CON" ENABLE;

--------------------------------------------------------
--  DDL for Trigger TR_NEW_CUSTOMER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_NEW_CUSTOMER"
BEFORE INSERT ON CUSTOMER
FOR EACH ROW

BEGIN
SELECT SEQUENCE_CUSTOMER.NEXTVAL INTO :NEW.ID_CUSTOMER FROM dual;
END;
/
ALTER TRIGGER "TR_NEW_CUSTOMER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_NEW_ITEM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_NEW_ITEM"
BEFORE INSERT ON ITEM
FOR EACH ROW
DECLARE id_t NUMBER;

type_t NUMBER;
BEGIN
SELECT SEQUENCE_ITEMS.NEXTVAL INTO :NEW.ID_ITEM FROM dual;
IF inserting then 
type_t:=:new.TYPE;
IF type_t =0 THEN
id_t:=SEQUENCE_BOOK.NEXTVAL;

SELECT id_t INTO :NEW.ID_PROPERTIES FROM dual;

INSERT INTO PROPERTIES(ID_BOOK) values(id_t);
END IF;
END IF;
END;
/
ALTER TRIGGER "TR_NEW_ITEM" ENABLE;
--------------------------------------------------------
--  DDL for Function ORDER_COST
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ORDER_COST" (ID_OR IN NUMBER)
   RETURN FLOAT
   IS 
    TOTAL_COST FLOAT;
   BEGIN
   SELECT SUM(c.AMOUNT*p.PRICE) 
   INTO TOTAL_COST
   FROM CONTENR_ORDER c, PROPERTIES p, ITEM i
   WHERE i.ID_PROPERTIES=p.ID_BOOK
   AND ID_OR = c.ID_ORDER
   AND c.ID_BOOK=i.ID_ITEM;
 
   RETURN TOTAL_COST;
   END;

/
--------------------------------------------------------
--  DDL for Function ORDER_COST_DISCOUNT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ORDER_COST_DISCOUNT" (ID_OR IN NUMBER)
   RETURN FLOAT
   IS 
   TOTAL_COST FLOAT;
   DISCOUNT FLOAT;
   BEGIN
   SELECT SUM(c.AMOUNT*p.PRICE) 
   INTO TOTAL_COST
   FROM CONTENR_ORDER c, PROPERTIES p, ITEM i
   WHERE i.ID_PROPERTIES=p.ID_BOOK
   AND ID_OR = c.ID_ORDER
   AND c.ID_BOOK=i.ID_ITEM;
  IF(TOTAL_COST>200) THEN
    DISCOUNT:=TOTAL_COST*0.2;
    TOTAL_COST:=TOTAL_COST-DISCOUNT;
    END IF;
   RETURN TOTAL_COST;
   END;

/
--------------------------------------------------------
--  DDL for Procedure ADDBOOK
--------------------------------------------------------
  set define off;

  CREATE OR REPLACE PROCEDURE "ADDBOOK"
    (Name_p IN varchar2,
     DESCRIPTION_p IN varchar2,
     RUBRIC_p IN NUMBER,
     AUTHOR_ID IN NUMBER,
     PAGES_p IN NUMBER,
     PRICE_p IN FLOAT,
     AMOUNT_p IN NUMBER
    )
  IS

    BEGIN
      INSERT INTO ITEM(NAME,TYPE,DESCRIPTION,PARENT_ID) values(Name_p,0,DESCRIPTION_p,RUBRIC_p);
      UPDATE  PROPERTIES
      SET PAGES=PAGES_p,PRICE=PRICE_p,AMOUNT=AMOUNT_p,ID_AUTHOR=AUTHOR_ID
      WHERE PROPERTIES.ID_BOOK=(SELECT ID_PROPERTIES  FROM ITEM i,PROPERTIES
      WHERE i.ID_PROPERTIES=PROPERTIES.ID_BOOK
            AND  i.NAME=Name_p
            AND i.TYPE=0
            AND i.DESCRIPTION = DESCRIPTION_p
            AND i.PARENT_ID = RUBRIC_p);

      COMMIT;
      EXCEPTION
      WHEN OTHERS THEN
      ROLLBACK;
      RETURN;
    END;

/
--------------------------------------------------------
--  DDL for Procedure ADDORDER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ADDORDER"
  (
  CUSTOMER IN NUMBER,
  BOOK IN NUMBER,
  AMOUNT_c IN NUMBER,
  DATA_C IN DATE
  )
  IS
   id_or NUMBER;
	BEGIN 
  id_or:=SEQUENCE_ORDERS.NEXTVAL;
INSERT INTO ORDERS(ID_ORDER,ID_CUSTOMER,DATA) values(id_or,CUSTOMER,DATA_C);
 INSERT INTO CONTENR_ORDER(ID_ORDER,ID_BOOK,AMOUNT) values(id_or,BOOK,AMOUNT_c);
 
  COMMIT;
 EXCEPTION
 WHEN OTHERS THEN
 ROLLBACK;
 RETURN;
  END;

/
--------------------------------------------------------
--  DDL for Procedure DELETEBOOK
--------------------------------------------------------
set define off;

CREATE OR REPLACE PROCEDURE "DELETEBOOK"
(
Book_id IN NUMBER
)

IS
BEGIN

DELETE FROM ORDERS WHERE ID_ORDER=(
SELECT ID_ORDER
FROM CONTENR_ORDER
WHERE CONTENR_ORDER.ID_BOOK=Book_id
AND ROWNUM=1);
DELETE FROM ITEM WHERE ID_ITEM=Book_id;
COMMIT;

EXCEPTION
WHEN OTHERS THEN
ROLLBACK;
RETURN;
END;
/